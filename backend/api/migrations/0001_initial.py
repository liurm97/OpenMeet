# Generated by Django 5.1.4 on 2025-01-28 07:48

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.UUID('6b292236-5909-4904-b425-2cdeb13bdf82'), primary_key=True, serialize=False)),
                ('owner', models.CharField(default='-1')),
                ('name', models.CharField(max_length=200)),
                ('type', models.IntegerField(choices=[(1, 'Specific dates'), (2, 'Days of the week')], default=1)),
                ('start_time_utc', models.CharField(default='09:00', max_length=200, validators=[django.core.validators.RegexValidator(message="Valid time should end with '00'", regex='(0[0-9]{1}|1[0-9]{1}|2[0-3]{1}):00$')])),
                ('end_time_utc', models.CharField(default='10:00', max_length=200, validators=[django.core.validators.RegexValidator(message="Valid time should end with '00'", regex='(0[0-9]{1}|1[0-9]{1}|2[0-3]{1}):00$')])),
                ('created_at_utc', models.DateTimeField(auto_now_add=True)),
                ('updated_at_utc', models.DateTimeField(auto_now=True)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('type', 1), ('type', 2), _connector='OR'), name='Type constraint', violation_error_message='Integer type must be either 1 or 2.')],
            },
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.UUID('96ed1e92-caa1-44f6-9f83-718645718a1d'), primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Invalid date format. Must be YYYY-mm-dd', regex='^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$')])),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventDates', to='api.event')),
            ],
        ),
        migrations.CreateModel(
            name='Respondent',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.UUID('903f2b14-903b-4f57-b9ea-9861fa4cab7f'), primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('isGuestRespondent', models.BooleanField(default=True)),
                ('respondentEvent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respondentEvent', to='api.event')),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.UUID('68450b66-e965-43e6-b4b8-5121b9caa248'), primary_key=True, serialize=False)),
                ('time', models.CharField()),
                ('respondentAvailability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respondentAvailability', to='api.respondent')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.UUID('8d98f195-927c-4834-8198-fbf1c915ca22'), primary_key=True, serialize=False)),
                ('day', models.CharField(blank=True, max_length=100, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventDays', to='api.event')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('day', 'Monday'), ('day', 'Tuesday'), ('day', 'Wednesday'), ('day', 'Thursday'), ('day', 'Friday'), ('day', 'Saturday'), ('day', 'Sunday'), _connector='OR'), name='day-of-week constraint', violation_error_message='Day must be a valid day of week')],
            },
        ),
    ]
